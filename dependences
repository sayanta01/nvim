#!/bin/sh

## Debian
if [ -f /etc/debian_version ]; then
	printf "Build neovim? [y/N]: "
	read -r choice
	if [ "$choice" = "y" ]; then
		sudo apt install -y ninja-build gettext cmake unzip curl build-essential
		git clone --depth=1 https://github.com/neovim/neovim.git ~/.cache/neovim
		cd ~/.cache/neovim && make CMAKE_BUILD_TYPE=RelWithDebInfo
		cd build && cpack -G DEB && sudo dpkg -i nvim-linux64.deb
	else
		:
	fi

	## Pkgs
	sudo apt install -y npm cargo luarocks \
		php golang ruby \
		ripgrep \
		python3-pip python3-venv
	# default-jdk dotnet-sdk-6.0

	# curl -Lo dotnet-install.sh https://dot.net/v1/dotnet-install.sh
	# chmod +x dotnet-install.sh && ./dotnet-install.sh --version latest
	go install github.com/jesseduffield/lazygit@latest
	# cargo install bat
	# curl -fsSL https://install.julialang.org | sh
fi

## Arch
if [ -f /etc/arch-release ]; then
	sudo pacman -s --noconfirm npm cargo luarocks \
		php go ruby \
		ripgrep lazygit
	# jdk-openjdk dotnet-sdk julia
else
	:
fi

## Node
sudo npm i -g live-server tree-sitter-cli

## Python
pip install pynvim

## Rust
rustup component add rustfmt

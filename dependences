#!/bin/sh

## Debian
if [ -f /etc/debian_version ]; then
	printf "Build neovim? [y/N]: "
	read -r choice
	if [ "$choice" = "y" ]; then
		sudo apt install -y ninja-build gettext
		git clone https://github.com/neovim/neovim.git ~/.cache/neovim
		cd ~/.cache/neovim || exit 1
		make -j4 && sudo make install
	else
		:
	fi

	## Pkgs
	sudo apt install -y npm luarocks cargo \
		php golang ruby \
		ripgrep \
		python3-pip python3-venv \
		default-jdk dotnet-sdk-6.0
	# wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
	# chmod +x ./dotnet-install.sh && ./dotnet-install.sh --version latest

  # curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz" && sudo tar xf lazygit.tar.gz -C /usr/local/bin lazygit

	# printf "Install cargo pkgs? [y/N]: " && read -r choice && [ "$choice" = "y" ] && cargo install bat

	## Julia
	# curl -s https://api.github.com/repos/JuliaLang/julia/releases | grep -oP '"tag_name": "\K(.*?)(?=")' # check versions
	printf "Install julia? [y/N]: "
	read -r choice
	if [ "$choice" = "y" ]; then
		wget https://julialang-s3.julialang.org/bin/linux/x64/1.8/julia-1.8.5-linux-x86_64.tar.gz
		tar -xvzf julia-1.8.5-linux-x86_64.tar.gz
		sudo mv julai-1.8.5 /opt/
		sudo ln -s /opt/julia-1.8.5/bin/julia /usr/local/bin/julia
	else
		:
	fi
else
	:
fi

## Arch
if [ -f /etc/arch-release ]; then
	sudo pacman -S --noconfirm npm luarocks cargo \
		php go ruby \
		ripgrep lazygit \
		jdk-openjdk dotnet-sdk julia
else
	:
fi

## Node
sudo npm i -g tree-sitter-cli live-server

## Python
pip install pynvim

## Rust
rustup component add rustfmt
